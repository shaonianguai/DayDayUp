<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wzUXRibbon="clr-namespace:WzUXRibbon"
                    xmlns:wzUXRibbonHelpers="clr-namespace:WzUXRibbon.Helpers"
                    xmlns:converters="clr-namespace:WzUXRibbon.Converters"
                    xmlns:controls="clr-namespace:WzUXRibbon.Controls"
                    xmlns:effects="clr-namespace:WzUXRibbon.Effects"
                    xmlns:attachedProperties="clr-namespace:WzUXRibbon.AttachedProperties"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:styleSelectors="clr-namespace:WzUXRibbon.StyleSelectors"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WzUXRibbon;component/Themes/ColorThemes/ColorTheme.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WzUXRibbon;component/Themes/Controls/MenuSeparator.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <DataTemplate x:Key="Ribbon.DataTemplates.DropDownButton.Header">
        <controls:TwoLineLabel HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             Text="{Binding}">
            <controls:TwoLineLabel.Style>
                <Style TargetType="controls:TwoLineLabel"
                       BasedOn="{StaticResource {x:Type controls:TwoLineLabel}}">
                    <Setter Property="HasGlyph" Value="{Binding HasTriangle, RelativeSource={RelativeSource AncestorType=controls:DropDownButton}}" />
                    <Setter Property="HasTwoLines" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Size, RelativeSource={RelativeSource AncestorType=wzUXRibbon:IRibbonControl}}" Value="Middle">
                            <Setter Property="HasTwoLines" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Size, RelativeSource={RelativeSource AncestorType=wzUXRibbon:IRibbonControl}}" Value="Small">
                            <Setter Property="HasTwoLines" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSimplified, RelativeSource={RelativeSource AncestorType=wzUXRibbon:ISimplifiedRibbonControl}}" Value="True">
                            <Setter Property="HasTwoLines" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:TwoLineLabel.Style>
        </controls:TwoLineLabel>
    </DataTemplate>

    <DataTemplate x:Key="Ribbon.DataTemplates.DropDownButton.Header.Simplified">
        <controls:TwoLineLabel HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             HasGlyph="False"
                             HasTwoLines="False"
                             Text="{Binding}" />
    </DataTemplate>

    <Style x:Key="Ribbon.Styles.RibbonDropDownButton"
           TargetType="{x:Type controls:DropDownButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Ribbon.Styles.FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource Ribbon.Brushes.LabelText}" />
        <Setter Property="HeaderTemplate" Value="{DynamicResource Ribbon.DataTemplates.DropDownButton.Header}" />
        <Setter Property="Height" Value="68" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Template" Value="{DynamicResource Ribbon.Templates.RibbonDropDownButton}" />
        <Setter Property="Width" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="attachedProperties:RibbonProperties.IconSize" Value="Large" />
                <Setter Property="Height" Value="68" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="attachedProperties:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Height" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="attachedProperties:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Height" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Width" Value="32" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="attachedProperties:RibbonProperties.IconSize" Value="Medium" />
                <Setter Property="HeaderTemplate" Value="{DynamicResource Ribbon.DataTemplates.DropDownButton.Header.Simplified}" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Padding" Value="6 2 2 2" />
                <Setter Property="Template" Value="{DynamicResource Ribbon.Templates.DropDownButton.Simplified}" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="Size" Value="Small" />
                </MultiTrigger.Conditions>
                <Setter Property="attachedProperties:RibbonProperties.IconSize" Value="Small" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="Ribbon.Templates.RibbonDropDownButton"
                     TargetType="{x:Type controls:DropDownButton}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type Separator}"
                   BasedOn="{StaticResource Ribbon.Styles.MenuSeparator}" />
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="PART_ButtonBorder"
                    Height="Auto"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <StackPanel x:Name="stackPanel"
                            Width="Auto"
                            Margin="{TemplateBinding Padding}"
                            Orientation="Vertical">
                    <controls:IconPresenter x:Name="iconImage"
                                          Margin="0 2 0 0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IconSize="{Binding Path=(attachedProperties:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                    <ContentControl x:Name="PART_HeaderContentHost"
                                    Margin="2 0 2 2"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Focusable="False" />
                </StackPanel>
            </Border>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="0 0 -4 0"
                   VerticalAlignment="Top"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <controls:ResizeableContentControl x:Name="PART_PopupContentControl"
                                                 MinWidth="{TemplateBinding ActualWidth}"
                                                 MinHeight="{TemplateBinding ActualHeight}"
                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                 IsEnabled="{TemplateBinding IsEnabled}"
                                                 ResizeMode="{TemplateBinding ResizeMode}">
                    <ScrollViewer Style="{DynamicResource Ribbon.Styles.MenuScrollViewer}"
                                  Margin="1"
                                  HorizontalScrollBarVisibility="Disabled"
                                  IsTabStop="False"
                                  SnapsToDevicePixels="True"
                                  VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Local" />
                    </ScrollViewer>
                </controls:ResizeableContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Size" Value="Small">
                <Setter TargetName="PART_HeaderContentHost" Property="Content" Value="" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="-2 0 2 1" />
                <Setter TargetName="PART_HeaderContentHost" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="PART_HeaderContentHost" Property="Width" Value="10" />
                <Setter TargetName="iconImage" Property="Margin" Value="2 0 0 0" />
                <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="PART_ButtonBorder" Property="VerticalAlignment" Value="Stretch" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="2 0 2 1" />
                <Setter TargetName="PART_HeaderContentHost" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="iconImage" Property="Margin" Value="2 0 2 0" />
                <Setter TargetName="iconImage" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
                <Setter TargetName="stackPanel" Property="Width" Value="Auto" />
            </Trigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_HeaderContentHost" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsDropDownOpen" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Ribbon.Templates.DropDownButton.Simplified"
                     TargetType="{x:Type controls:DropDownButton}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type Separator}"
                   BasedOn="{StaticResource Ribbon.Styles.MenuSeparator}" />
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="PART_ButtonBorder"
                    Height="Auto"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="stackPanel"
                      Width="Auto"
                      Height="Auto"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="iconImageGrid"
                          Grid.Column="0"
                          Margin="0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center">
                        <controls:IconPresenter x:Name="iconImage"
                                              IconSize="{Binding Path=(attachedProperties:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                              LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                              MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                              SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="iconImageBorder"
                                Width="{Binding ActualWidth, ElementName=iconImage}"
                                Height="{Binding ActualHeight, ElementName=iconImage}"
                                BorderBrush="{DynamicResource Ribbon.Brushes.Control.Border}"
                                BorderThickness="1"
                                Visibility="Collapsed" />
                    </Grid>

                    <ContentControl x:Name="PART_HeaderContentHost"
                                    Grid.Column="1"
                                    Margin="2 0 0 0"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Focusable="False" />

                    <controls:TwoLineLabel x:Name="controlLabel2"
                                         Grid.Column="2"
                                         Margin="0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         HasGlyph="{TemplateBinding HasTriangle}"
                                         HasTwoLines="False"
                                         Text="" />
                </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="0 0 -4 0"
                   VerticalAlignment="Top"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <controls:ResizeableContentControl x:Name="PART_PopupContentControl"
                                                 MinWidth="{TemplateBinding ActualWidth}"
                                                 MinHeight="{TemplateBinding ActualHeight}"
                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                 IsEnabled="{TemplateBinding IsEnabled}"
                                                 ResizeMode="{TemplateBinding ResizeMode}">
                    <ScrollViewer x:Name="PART_ScrollViewer"
                                  Style="{DynamicResource Ribbon.Styles.MenuScrollViewer}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  Margin="1"
                                  HorizontalScrollBarVisibility="Disabled"
                                  IsTabStop="False"
                                  SnapsToDevicePixels="True"
                                  VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Local" />
                    </ScrollViewer>
                </controls:ResizeableContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Small" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImageBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Middle" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImageBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Large" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
                <Setter TargetName="iconImage" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>

            <Trigger Property="Size" Value="Small">
                <Setter TargetName="PART_HeaderContentHost" Property="Content" Value="" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
                <Setter TargetName="stackPanel" Property="Margin" Value="4 0 1 0" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="PART_HeaderContentHost" Property="Content" Value="" />
                <Setter TargetName="PART_HeaderContentHost" Property="Margin" Value="0" />
            </Trigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_HeaderContentHost" Property="Opacity" Value="0.5" />
                <Setter TargetName="controlLabel2" Property="Opacity" Value="0.5" />
                <Setter TargetName="iconImageBorder" Property="BorderBrush" Value="{DynamicResource Ribbon.Brushes.Control.Disabled.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsDropDownOpen" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
</ResourceDictionary>