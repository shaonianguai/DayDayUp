<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wzUXRibbon="clr-namespace:WzUXRibbon"
                    xmlns:wzUXRibbonHelpers="clr-namespace:WzUXRibbon.Helpers"
                    xmlns:converters="clr-namespace:WzUXRibbon.Converters"
                    xmlns:controls="clr-namespace:WzUXRibbon.Controls"
                    xmlns:effects="clr-namespace:WzUXRibbon.Effects"
                    xmlns:attachedProperties="clr-namespace:WzUXRibbon.AttachedProperties"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:styleSelectors="clr-namespace:WzUXRibbon.StyleSelectors"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WzUXRibbon;component/Themes/ColorThemes/ColorTheme.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WzUXRibbon;component/Themes/Controls/MenuSeparator.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate x:Key="Ribbon.Templates.Ribbon"
                     TargetType="{x:Type controls:Ribbon}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type Separator}"
                   BasedOn="{StaticResource Ribbon.Styles.MenuSeparator}" />
        </ControlTemplate.Resources>

        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="PART_LayoutRoot"
                  Width="Auto"
                  Height="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <controls:RibbonTabControl x:Name="PART_RibbonTabControl"
                                         AreTabHeadersVisible="{TemplateBinding AreTabHeadersVisible}"
                                         ContentHeight="{TemplateBinding ContentHeight}"
                                         ContextMenu="{Binding ContextMenu, ElementName=PART_LayoutRoot}"
                                         IsDisplayOptionsButtonVisible="{TemplateBinding IsDisplayOptionsButtonVisible}"
                                         IsMouseWheelScrollingEnabled="{TemplateBinding IsMouseWheelScrollingEnabled}"
                                         IsMouseWheelScrollingEnabledEverywhere="{TemplateBinding IsMouseWheelScrollingEnabledEverywhere}"
                                         IsToolBarVisible="{TemplateBinding IsToolBarVisible}"
                                         Menu="{TemplateBinding Menu}" />

                <ContentControl x:Name="quickAccessToolBarHolder"
                                Grid.Row="1"
                                Height="{TemplateBinding QuickAccessToolBarHeight}"
                                HorizontalAlignment="Left">
                    <controls:QuickAccessToolBar x:Name="PART_QuickAccessToolBar"
                                               HorizontalAlignment="Left"
                                               Focusable="False"
                                               IsMenuDropDownVisible="{TemplateBinding IsQuickAccessToolBarMenuDropDownVisible}"
                                               ShowAboveRibbon="{Binding ShowQuickAccessToolBarAboveRibbon, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                </ContentControl>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsQuickAccessToolBarVisible" Value="False">
                <Setter TargetName="PART_QuickAccessToolBar" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="quickAccessToolBarHolder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="PART_RibbonTabControl" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="quickAccessToolBarHolder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="QuickAccessToolBar" Value="{x:Null}">
                <Setter TargetName="quickAccessToolBarHolder" Property="Content" Value="{x:Null}" />
                <Setter TargetName="quickAccessToolBarHolder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowQuickAccessToolBarAboveRibbon" Value="True">
                <Setter TargetName="quickAccessToolBarHolder" Property="Content" Value="{x:Null}" />
                <Setter TargetName="quickAccessToolBarHolder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter TargetName="PART_RibbonTabControl" Property="ContentHeight" Value="42" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Ribbon.Styles.Ribbon"
           TargetType="{x:Type controls:Ribbon}">
        <Setter Property="Background" Value="{DynamicResource Ribbon.Brushes.Ribbon.Background}" />
        <Setter Property="wzUXRibbonHelpers:FrameworkHelper.UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Ribbon.Styles.FocusVisual.Empty}" />
        <Setter Property="Foreground" Value="{DynamicResource Ribbon.Brushes.LabelText}" />
        <Setter Property="IsTabStop" Value="False" />
        <!--<Setter Property="QuickAccessToolBarHeight" Value="{Binding TitleBar.ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type wzUXRibbon:IRibbonWindow}}, FallbackValue=23}" />-->
        <Setter Property="Template" Value="{DynamicResource Ribbon.Templates.Ribbon}" />
        <!--<Setter Property="TitleBar" Value="{Binding TitleBar, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type wzUXRibbon:IRibbonWindow}}, FallbackValue={x:Null}}" />-->
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
</ResourceDictionary>